#include "myheader.h" 
#include "mysh.h"
#include "mypipe.h"

job *first_job = NULL;
int main(void) {
  lineptr = malloc(sizeof(char) * MAX_STRING_LEN);
  stream = fdopen(STDIN_FILENO, "r");
  // argv = malloc(sizeof(char *) * MAX_TOKENS);
  pipe_tokens = malloc(sizeof(char *) * MAX_TOKENS);

  do {
    printf("mysh> ");
    read_command();
  } while (process_jobs() != EXIT_CMD);

  return 0;
}

void read_command() {
  if(getline(&lineptr, &MAX_LINE_LEN, stream) == NULL) return;
  arg_tokenize(lineptr);
}

char **arg_tokenize(char *string) {
  int arg_token_count = 0;
  char *arg_token;
  char **argv = malloc(sizeof(char *) * MAX_TOKENS);

  while ((arg_token = strsep(&string, " \t\v\f\n\r")) != NULL) {
    // printf("this_token = %s\n", arg_token);
    if (*arg_token == '\0')
      continue;

    argv[arg_token_count] = arg_token;
    arg_token_count++;
  }
  // print_char_ptr_arr(argv);
  return argv;
}

int process_jobs() {
  return 1;
}